{"version":3,"sources":["StateProvider.js","reducer.js","pages/Search.js","pages/Home.js","useGoogleSearch.js","keys.js","pages/SearchPage.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c4f2cc8.chunk.js","sourcesContent":["import React,{createContext, useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const  StateProvider=({reducer, initialState, children})=> {\r\n    return(\r\n        <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useStateValue =() => useContext(StateContext);\r\n","export const initialState = {\r\n  term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport {useStateValue} from '../StateProvider'\r\nimport { actionTypes } from \"../reducer\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  const [{},dispatch]=useStateValue();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"you hit the enter \", input);\r\n\r\n    dispatch({\r\n      type:actionTypes.SET_SEARCH_TERM,\r\n      term: input\r\n    })\r\n    \r\n    history.push(\"./search\");\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"search__inputIcon\" />\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} />\r\n        <MicIcon />\r\n      </div>\r\n\r\n      {!hideButtons ? (\r\n        <div className=\"search__buttons\">\r\n          <Button type=\"submit\" onClick={search} variant=\"outlined\">\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"search__buttons\">\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={search}\r\n            variant=\"outlined\"\r\n            className=\"search__buttonsHidden\"\r\n          >\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\" className=\"search__buttonsHidden\">\r\n            I'm Feeling Lucky\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Search from './Search';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/store\">Store</Link>\r\n        </div>\r\n        <div className=\"home__headerRight\">\r\n          <Link to=\"/gmail\">Gmail</Link>\r\n          <Link to=\"/images\">Images</Link>\r\n          <AppsIcon />\r\n          <Avatar />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          alt=\"Google\"\r\n        />\r\n        <div className=\"home__inputContainer\">\r\n            {/* <Search hideButtons/> */}\r\n            <Search/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {useState, useEffect} from 'react';\r\nimport API_KEY from './keys';\r\n\r\nconst CONTEXT_KEY = \"53fcb4e650a4af747\";\r\n\r\nconst useGoogleSearch=(term)=>{\r\n    const [data,setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData=async()=>{\r\n            fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n        .then(response => response.json())\r\n        .then(result=>{\r\n            setData(result)\r\n        })\r\n    }\r\n    fetchData();\r\n    }, {term})\r\n\r\n    return {data}\r\n};\r\n\r\n\r\nexport default useGoogleSearch\r\n","export const API_KEY = \"AIzaSyCzjSDigbrvLkvy2g4EgvdY6CfPrTnAnGM\";\r\n\r\nexport default API_KEY;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport useGoogleSearch from \"../useGoogleSearch\";\r\nimport \"./SearchPage.css\";\r\nimport Response from \"../response\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n\r\n  // LIVE API CALL\r\n  const {data}=useGoogleSearch(term);\r\n\r\n// practice api call\r\n//   const data = Response;\r\n\r\n  console.log(data);\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"searchPage__logo\"\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n            alt=\"Google\"\r\n          />\r\n        </Link>\r\n        <div className=\"searchPage__headerBody\">\r\n          <Search hideButtons />\r\n          <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__optionsLeft\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">All</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/news\">News</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <ImageIcon />\r\n                <Link to=\"/images\">Images</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <LocalOfferIcon />\r\n                <Link to=\"/shopping\">Shopping</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <RoomIcon />\r\n                <Link to=\"/maps\">maps</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <MoreVertIcon />\r\n                <Link to=\"/more\">more</Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"searchPage__optionsRight\">\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/settings\">Settings</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/tools\">Tools</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.searchInformation.formattedTotalResults} results (\r\n            {data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n          </p>\r\n\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__result\">\r\n              <a href={item.link}>\r\n                {/* <img src={item.pagemap?.cse_image[0]?.length} alt=\"\"/> */}\r\n                {item.pagemap?.cse_image?.length > 0 &&\r\n                  item.pagemap?.cse_image[0]?.src && (\r\n                    <img\r\n                      className=\"searchPage__resultImage\"\r\n                      src={item.pagemap?.cse_image[0]?.src}\r\n                    />\r\n                  )}\r\n                {item.displayLink} ▽\r\n              </a>\r\n              <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                <h2>{item.title}</h2>\r\n                {item.displayLink}\r\n              </a>\r\n              <p className=\"searchPage__resultSnippent\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Search from \"./pages/Search\";\nimport SearchPage from './pages/SearchPage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n          <SearchPage/>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n// import reportWebVitals from './reportWebVitals';\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}